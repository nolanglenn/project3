{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/layout/Dashboard.js","components/navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Landing","react_default","a","createElement","style","height","className","width","borderRadius","letterSpacing","href","marginLeft","Component","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","console","log","props","registerUser","history","push","nextProps","marginTop","react_router_dom","to","paddingLeft","noValidate","error","classnames","invalid","htmlFor","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","_ref","component","rest","objectWithoutProperties","react_router","assign","render","Dashboard","split","Navbar","onLogoutClick","margin","onClick","layout_Dashboard","jwtToken","currentTime","Date","now","exp","location","App","es","exact","path","private_route_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9cd14ff0.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n// Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n  } from \"../actions/types\";\n\n  const isEmpty = require(\"is-empty\");\n\n  const initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_CURRENT_USER:\n        return {\n          ...state,\n          isAuthenticated: !isEmpty(action.payload),\n          user: action.payload\n        };\n      case USER_LOADING:\n        return {\n          ...state,\n          loading: true\n        };\n      default:\n        return state;\n    }\n  }","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nexport default store;","import React, { Component } from \"react\";\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h2>\n              Welcome to Open<b>House</b>\n            </h2>\n            <p className=\"flow-text grey-text text-darken-1\">\n              Application Details Go Here\n            </p>\n            <br />\n            <a\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\"\n              }}\n              className=\"btn btn-large waves-effect waves-light hoverable deep-purple darken-4\"\n              href=\"/Register\"\n            >\n              Register\n            </a>\n            <a\n              style={{\n                marginLeft: \"2rem\",\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\"\n              }}\n              className=\"btn btn-large waves-effect white hoverable black-text\"\n              href=\"/Login\"\n            >\n              Log In\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Landing;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n\nonChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\nonSubmit = e => {\n    e.preventDefault();\nconst newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n    console.log(newUser);\n    this.props.registerUser(newUser, this.props.history); \n  };\n  \nrender() {\n    const { errors } = this.state;\nreturn (\n      <div className=\"container\">\n        <div style={{ marginTop: \"10rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <h1>Open<b>House</b></h1>\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link className=\"deep-purple-text\" to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable deep-purple darken-4\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n  )(withRouter(Register));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\nif (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\nonChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\nonSubmit = e => {\n    e.preventDefault();\nconst userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\nthis.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n\nrender() {\n    const { errors } = this.state;\nreturn (\n      <div className=\"container\">\n        <div style={{ marginTop: \"10rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <h1>Open<b>House</b></h1>\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-2\">\n                Don't have an account? <Link className=\"deep-purple-text\" to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable deep-purple darken-4\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n//import { Link } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    const { user } = this.props.auth;\n  \n    return (\n      <div className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h1>\n              <b>Hello, {user.name.split(\" \")[0]}</b>\n            </h1>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport Dashboard from \"../layout/Dashboard\";\n\nclass Navbar extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\nrender() {\n    const { user } = this.props.auth;\n\nreturn (\n      <div>\n      <div className=\"navbar-fixed\">\n        <nav>\n          <div className=\"nav-wrapper deep-purple darken-2\">\n            <Link to=\"/dashboard\" className=\"brand-logo\" style={{ margin: \"0 0 0 10px\" }}>Open<b>House</b></Link>\n            <ul className=\"right hide-on-med-and-down\">\n              <li><a href=\"sass.html\">Page 1</a></li>\n              <li><a href=\"sass.html\">Page 2</a></li>\n              <li><a href=\"badges.html\">Page 3</a></li>\n              <li><a href=\"collapsible.html\">{user.name.split(\" \")[0]}'s Profile</a></li>\n              <li><a onClick={this.onLogoutClick} href=\"mobile.html\">Logout</a></li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      <Dashboard />\n      </div>\n    );\n  }\n}\nNavbar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Navbar);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n// import Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/navbar/Navbar\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}